{"version":3,"sources":["components/Nav.js","components/Header.js","components/Footer.js","displayMessages/MySnackBar.js","components/Login.js","pages/Home.js","pages/AddList.js","pages/views/Lists.js","pages/views/List.js","pages/Profile.js","pages/views/Users.js","pages/AddUser.js","App.js","serviceWorker.js","index.js","logo.png"],"names":["Nav","state","left","open","role","fetchUserRole","fetch","headers","x-auth","sessionStorage","token","then","res","status","json","Error","_this","setState","user","catch","e","console","log","toggleDrawer","side","Object","defineProperty","handleClick","navClicked","navItemClicked","topItemClicked","this","classes","props","sideList","react_default","a","createElement","className","list","List_default","component","subheader","ListSubheader_default","concat","root","ListItem_default","button","Link","to","onClick","Divider_default","Fragment","ListItemIcon_default","ViewList_default","ListItemText_default","primary","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","disablePadding","nested","Button_default","variant","color","signOut","Menu_default","Drawer_default","onClose","tabIndex","Component","withStyles","theme","width","maxWidth","backgroundColor","palette","background","paper","paddingLeft","spacing","unit","fullList","hr","height","marginTop","marginBottom","Header","btnText","loggedIn","AppBar_default","position","Toolbar_default","Typography_default","grow","src","logo","alt","components_Nav","flexGrow","display","align-items","menuButton","marginLeft","marginRight","Footer","year","Date","getFullYear","Grid_default","container","item","xs","sm","md","href","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","MySnackbarContent","_this$props","message","target","other","objectWithoutProperties","Icon","SnackbarContent_default","assign","classNames","aria-describedby","id","icon","iconVariant","action","IconButton_default","key","aria-label","close","Close_default","green","dark","amber","fontSize","opacity","alignItems","Login","email","password","warningMsg","handleChange","_this$setState","which","submitLogin","name","value","closeModal","_this$state","signIn","resMsg","nextProps","MySnackBar","margin","TextField_default","MuiFormLabel","label","placeholder","InputProps","startAdornment","InputAdornment_default","autoFocus","required","autoComplete","onChange","un","type","onKeyPress","pw","Home","all_lists","todo_list","launch_list","live_list","ecom_list","ecom_live_list","listsAcquired","listType","getLists","lists","map","el","idx","temp","push","length","slice","allStateLists","title","array","img","countCompleted","totalCompleted","completed","handleMO","updateListType","_this2","cards","lIndex","lg","xl","Card_default","card","CardActionArea_default","CardMedia_default","media","image","CardContent_default","gutterBottom","CardActions_default","size","onMouseOver","AddList","listName","website","labelWidth","listID","successMsg","failure","handleSubmit","preventDefault","method","Content-Type","body","JSON","stringify","_id","ReactDOM","findDOMNode","InputLabelRef","offsetWidth","FormControl_default","formControl","InputLabel_default","ref","htmlFor","Select_default","input","OutlinedInput_default","MenuItem_default","textField","flexWrap","text-transform","minWidth","selectEmpty","Lists","receivedLists","searchResults","defaultLists","listToRemove","removedList","lastWarning","fetchLists","handleClose","prettifyName","split","handleSearch","regex","RegExp","match","noMatch","msg","askToDelete","deleteList","dismissRestore","restoreList","items","_this$state2","TableRow_default","TableCell_default","scope","createdAt","getMonth","getDate","searchBar","modal","Modal_default","aria-labelledby","askToRestore","Paper_default","Table_default","table","TableHead_default","TableBody_default","overflowX","max-width","boxShadow","shadows","padding","top","right","List","items_complete","gotList","progress","newText","showEditor","fetchList","updateItems","checked","selectedItem","find","updatedItem","sendNewList","total","progressPercentage","percent","Math","round","toggleEditor","removeItem","newItems","filter","setNewItem","itemObj","text","handleListName","lName","typeName","URLSearchParams","window","location","search","get","_this3","_this$state3","listContent","completedAt","toLocaleTimeString","clItem","clIdx","defaultChecked","Delete_default","Fab_default","fab","Add_default","addToList","Profile","userImg","title_bg","failureMsg","visible","fetchUserProfile","username","profile_img","profile_pg_bg","toggleVis","submitProfile","validator","isEmail","userCard","editor","helperText","AddAPhoto_default","AccountCircle_default","Email_default","VisibilityOff_default","Visibility_default","AddPhotoAlternate_default","style","backgroundImage","textAlign","secondary","backgroundSize","dense","menu","fontWeight","Users","users","receivedUsers","userToRemove","fetchUsers","deleteUser","err","checkAuth","Redirect","AddUser","loading","addUser","App","authToken","checkForToken","Promise","resolve","reject","response","code","components_Header","Route","path","exact","render","pages_Home","components_Login","pages_AddList","views_Lists","views_List","pages_Profile","views_Users","pages_AddUser","components_Footer","Boolean","hostname","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.0e14be08.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// UI Lib\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\n// Icons\r\nimport ViewList from \"@material-ui/icons/ViewList\";\r\nimport Menu from \"@material-ui/icons/Menu\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing.unit * 4\r\n  },\r\n  list: {\r\n    width: 250\r\n  },\r\n  fullList: {\r\n    width: \"auto\"\r\n  },\r\n  hr: {\r\n    height: 5,\r\n    marginTop: 10,\r\n    marginBottom: 10\r\n  }\r\n});\r\n\r\nclass Nav extends Component {\r\n  state = {\r\n    left: false,\r\n    open: false,\r\n    role: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchUserRole();\r\n  }\r\n\r\n  fetchUserRole = () => {\r\n    fetch(\"//localhost:5000/users/me\", {\r\n      headers: { \"x-auth\": sessionStorage.token }\r\n    })\r\n      .then(res =>\r\n        res.status === 200 ? res.json() : new Error(\"Invalid Token\")\r\n      )\r\n      .then(res => {\r\n        this.setState({ role: res.user.role });\r\n      })\r\n      .catch(e => console.log(e));\r\n  };\r\n\r\n  toggleDrawer = (side, open) => {\r\n    this.setState({\r\n      [side]: open\r\n    });\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState(state => ({ open: !state.open }));\r\n  };\r\n\r\n  navClicked = (side, open) => () => {\r\n    this.toggleDrawer(side, open);\r\n  };\r\n\r\n  navItemClicked = (side, open) => () => {\r\n    this.toggleDrawer(side, open);\r\n    this.handleClick();\r\n  };\r\n\r\n  topItemClicked = (side, open) => () => {\r\n    this.toggleDrawer(side, open);\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const sideList = (\r\n      <div className={classes.list}>\r\n        <List\r\n          component=\"nav\"\r\n          subheader={<ListSubheader component=\"div\">All Routes</ListSubheader>}\r\n          className={`${classes.root} nav-root`}\r\n        >\r\n          <ListItem button className=\"nav-item\">\r\n            <Link to=\"/\" onClick={this.topItemClicked(\"left\", false)}>\r\n              Home\r\n            </Link>\r\n          </ListItem>\r\n          <ListItem button className=\"nav-item\">\r\n            <Link to=\"/profile\" onClick={this.topItemClicked(\"left\", false)}>\r\n              Profile\r\n            </Link>\r\n          </ListItem>\r\n          <ListItem button className=\"nav-item\">\r\n            <Link to=\"/\" onClick={this.topItemClicked(\"left\", false)}>\r\n              All Lists\r\n            </Link>\r\n          </ListItem>\r\n          <ListItem button className=\"nav-item\">\r\n            <Link to=\"/add-list\" onClick={this.topItemClicked(\"left\", false)}>\r\n              Add List\r\n            </Link>\r\n          </ListItem>\r\n\r\n          <Divider />\r\n          {this.state.role === \"admin\" ? (\r\n            <React.Fragment>\r\n              <ListItem button onClick={this.handleClick}>\r\n                <ListItemIcon>\r\n                  <ViewList />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"User Actions\" />\r\n                {this.state.open ? <ExpandLess /> : <ExpandMore />}\r\n              </ListItem>\r\n              <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                  <ListItem button className={`${classes.nested} nav-item`}>\r\n                    <Link\r\n                      to=\"/users\"\r\n                      onClick={this.navItemClicked(\"left\", false)}\r\n                    >\r\n                      All Users\r\n                    </Link>\r\n                  </ListItem>\r\n                  <ListItem button className={`${classes.nested} nav-item`}>\r\n                    <Link\r\n                      to=\"/users/add\"\r\n                      onClick={this.navItemClicked(\"left\", false)}\r\n                    >\r\n                      Add User\r\n                    </Link>\r\n                  </ListItem>\r\n                </List>\r\n              </Collapse>\r\n            </React.Fragment>\r\n          ) : null}\r\n          <ListItem className=\"nav-item\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={this.props.signOut}\r\n              className=\"signout-btn\"\r\n            >\r\n              logout\r\n            </Button>\r\n          </ListItem>\r\n        </List>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <Button onClick={this.navClicked(\"left\", true)}>\r\n          <div className=\"nav-title-container\">\r\n            <Menu /> <h3 className=\"nav-title\">Menu</h3>\r\n          </div>\r\n        </Button>\r\n        <Drawer\r\n          className=\"popout-nav\"\r\n          open={this.state.left}\r\n          onClose={this.navClicked(\"left\", false)}\r\n        >\r\n          <div tabIndex={0} role=\"button\">\r\n            {sideList}\r\n          </div>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(Nav);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"./../logo.png\";\r\nimport Nav from \"./Nav\";\r\n// UI Lib\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n    \"align-items\": \"center\"\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20\r\n  }\r\n};\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    btnText: \"Login\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.loggedIn) {\r\n      this.setState({ btnText: \"Logout\" });\r\n    } else {\r\n      this.setState({ btnText: \"Login\" });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { btnText } = this.state;\r\n    return (\r\n      <AppBar position=\"static\" className=\"header\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n            <img src={logo} className=\"logo\" alt=\"logo\" />\r\n            <span className=\"header-title\">Minerva Organization Lists</span>\r\n          </Typography>\r\n          <Link to=\"/profile\" className=\"profile-btn\">\r\n            <i className=\"fas fa-user user-icon\" />\r\n          </Link>\r\n          <Button\r\n            variant=\"contained\"\r\n            className=\"btn\"\r\n            onClick={this.props.signOut}\r\n          >\r\n            {btnText}\r\n          </Button>\r\n        </Toolbar>\r\n        <nav className=\"nav\">\r\n          <Nav signOut={this.props.signOut} />\r\n        </nav>\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Header);\r\n","import React, { Component } from \"react\";\r\nimport logo from \"./../logo.png\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1\r\n  }\r\n};\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    const { classes } = this.props;\r\n    const year = new Date().getFullYear();\r\n    return (\r\n      <footer className=\"footer\">\r\n        <div className={`${classes.root} large-wrapper`}>\r\n          <Grid container spacing={24} className=\"grid-container\">\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <img className=\"footer-logo\" src={logo} alt=\"logo\" />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <p>Checklist Organization Application</p>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={4}>\r\n              <p>\r\n                Copyright &copy; {year}.{\" \"}\r\n                <a href=\"https://minervawebdevelopment.com\">\r\n                  Minerva Web Development\r\n                </a>\r\n              </p>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Footer);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport amber from \"@material-ui/core/colors/amber\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon\r\n};\r\n\r\nconst styles1 = theme => ({\r\n  success: {\r\n    backgroundColor: green[600]\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.dark\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700]\r\n  },\r\n  icon: {\r\n    fontSize: 20\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing.unit\r\n  },\r\n  message: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  }\r\n});\r\n\r\nclass MySnackbarContent extends Component {\r\n  render() {\r\n    const {\r\n      classes,\r\n      className,\r\n      message,\r\n      onClose,\r\n      variant,\r\n      target,\r\n      ...other\r\n    } = this.props;\r\n    const Icon = variantIcon[variant];\r\n    return (\r\n      <SnackbarContent\r\n        className={classNames(classes[variant], className)}\r\n        aria-describedby=\"client-snackbar\"\r\n        message={\r\n          <span id=\"client-snackbar\" className={classes.message}>\r\n            <Icon className={classNames(classes.icon, classes.iconVariant)} />\r\n            {message}{\" \"}\r\n            {target ? (\r\n              <Link className=\"view-list-btn\" to={`/list?id=${target}`}>\r\n                View List\r\n              </Link>\r\n            ) : null}\r\n          </span>\r\n        }\r\n        action={[\r\n          <IconButton\r\n            key=\"close\"\r\n            aria-label=\"Close\"\r\n            color=\"inherit\"\r\n            className={classes.close}\r\n            onClick={onClose}\r\n          >\r\n            <CloseIcon className={classes.icon} />\r\n          </IconButton>\r\n        ]}\r\n        {...other}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nMySnackbarContent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  message: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf([\"success\", \"warning\", \"error\", \"info\"]).isRequired\r\n};\r\n\r\nexport default withStyles(styles1)(MySnackbarContent);\r\n","import React, { Component } from \"react\";\r\nimport logo from \"./../logo.png\";\r\n// UI Lib\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MySnackBar from \"./../displayMessages/MySnackBar\";\r\nimport amber from \"@material-ui/core/colors/amber\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n  margin: {\r\n    margin: theme.spacing.unit\r\n  },\r\n  button: {\r\n    margin: theme.spacing.unit\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700]\r\n  }\r\n});\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    warning: false,\r\n    warningMsg: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.resMsg) {\r\n      this.setState({ warningMsg: this.props.resMsg, warning: true });\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.resMsg !== \"\") {\r\n      this.setState({ warningMsg: nextProps.resMsg, warning: true });\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    if (e.which === 13) return this.submitLogin();\r\n    this.setState({ [e.target.name]: e.target.value, warning: false });\r\n  };\r\n\r\n  closeModal = () => this.setState({ warning: false });\r\n\r\n  submitLogin = () => {\r\n    let { email, password } = this.state;\r\n    if (!email || !password)\r\n      return this.setState({\r\n        warning: true,\r\n        warningMsg: \"Both email and password are required.\"\r\n      });\r\n    this.props.signIn(email, password);\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <main className=\"main login-landing\">\r\n        <form className=\"form\">\r\n          <img className=\"logo\" src={logo} alt=\"logo\" />\r\n          <h3 className=\"form-title\">Log in</h3>\r\n          {this.state.warning ? (\r\n            <MySnackBar\r\n              variant=\"warning\"\r\n              className={classes.margin}\r\n              message={this.state.warningMsg}\r\n              onClick={this.closeModal}\r\n            />\r\n          ) : null}\r\n          <TextField\r\n            className={`${classes.margin} ${\r\n              classes.MuiFormLabel\r\n            } input-txt-container`}\r\n            id=\"email\"\r\n            label=\"Email\"\r\n            placeholder=\"Email\"\r\n            name=\"email\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <i className=\"fas fa-user icon\" />\r\n                </InputAdornment>\r\n              ),\r\n              className: classes.label\r\n            }}\r\n            autoFocus={true}\r\n            required={true}\r\n            autoComplete=\"off\"\r\n            onChange={this.handleChange}\r\n            value={this.state.un}\r\n          />\r\n          <TextField\r\n            className={`${classes.margin} input-txt-container`}\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <i className=\"fas fa-lock icon\" />\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n            required={true}\r\n            onChange={this.handleChange}\r\n            onKeyPress={this.handleChange}\r\n            value={this.state.pw}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={`${classes.button} btn`}\r\n            onClick={this.submitLogin}\r\n          >\r\n            Sign In\r\n          </Button>\r\n        </form>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Login);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// UI lib\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst styles = {\r\n  card: {\r\n    maxWidth: 345,\r\n    margin: \"auto\",\r\n    height: \"100%\"\r\n  },\r\n  media: {\r\n    height: 140\r\n  }\r\n};\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    all_lists: [],\r\n    todo_list: [],\r\n    launch_list: [],\r\n    live_list: [],\r\n    ecom_list: [],\r\n    ecom_live_list: [],\r\n    listsAcquired: false,\r\n    listType: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getLists();\r\n  }\r\n\r\n  getLists = () => {\r\n    fetch(\"//localhost:5000/lists\", {\r\n      headers: {\r\n        \"x-auth\": sessionStorage.token\r\n      }\r\n    })\r\n      .then(res =>\r\n        res.status === 200\r\n          ? res.json()\r\n          : new Error(\"Could not authenticate and acquire lists.\")\r\n      )\r\n      .then(res => {\r\n        res.lists.map((el, idx) => {\r\n          let temp = this.state[el.type];\r\n          temp.push(el);\r\n          if (temp.length >= 5) temp = temp.slice(0, 5);\r\n          return this.setState({ [el.type]: temp });\r\n        });\r\n\r\n        let allStateLists = [\r\n          {\r\n            title: \"Todo Lists\",\r\n            array: this.state.todo_list,\r\n            type: \"todo_list\",\r\n            img: \"https://s3.amazonaws.com/minervalists/todo-list.jpg\"\r\n          },\r\n          {\r\n            title: \"Launch Lists\",\r\n            array: this.state.launch_list,\r\n            type: \"launch_list\",\r\n            img: \"https://s3.amazonaws.com/minervalists/launch-list.png\"\r\n          },\r\n          {\r\n            title: \"Live Lists\",\r\n            array: this.state.live_list,\r\n            type: \"live_list\",\r\n            img: \"https://s3.amazonaws.com/minervalists/live-list.png\"\r\n          },\r\n          {\r\n            title: \"Ecommerce Lists\",\r\n            array: this.state.ecom_list,\r\n            type: \"ecom_list\",\r\n            img: \"https://s3.amazonaws.com/minervalists/ecom-list.png\"\r\n          },\r\n          {\r\n            title: \"Ecommerce Live Lists\",\r\n            array: this.state.ecom_live_list,\r\n            type: \"ecom_live_list\",\r\n            img: \"https://s3.amazonaws.com/minervalists/ecom-live-list.jpg\"\r\n          }\r\n        ];\r\n        this.setState({ listsAcquired: true, all_lists: allStateLists });\r\n      })\r\n      .catch(e => console.error(e));\r\n  };\r\n\r\n  countCompleted = array => {\r\n    let totalCompleted = 0;\r\n    array.map(el => {\r\n      if (el.completed) return totalCompleted++;\r\n      return false;\r\n    });\r\n    return totalCompleted;\r\n  };\r\n\r\n  handleMO = type => this.props.updateListType(type);\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { listsAcquired, all_lists } = this.state;\r\n    const cards = listsAcquired ? (\r\n      all_lists.map((lists, lIndex) => (\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={6}\r\n          md={4}\r\n          lg={3}\r\n          xl={2}\r\n          key={`list-${lists.title}-${lIndex}`}\r\n        >\r\n          <Card className={classes.card}>\r\n            <CardActionArea>\r\n              <CardMedia\r\n                className={classes.media}\r\n                image={lists.img}\r\n                title=\"List\"\r\n              />\r\n              <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  {lists.title}\r\n                </Typography>\r\n                <Typography component=\"div\">\r\n                  <p>\r\n                    # of {lists.title}: {lists.array.length}\r\n                  </p>\r\n                  <p>Completed: {this.countCompleted(lists.array)}</p>\r\n                </Typography>\r\n              </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n              <Button\r\n                className=\"btn-container\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n              >\r\n                <Link\r\n                  to={`/lists/${lists.type}s`}\r\n                  onMouseOver={() => this.handleMO(lists.type)}\r\n                  className=\"btn\"\r\n                >\r\n                  View All\r\n                </Link>\r\n              </Button>\r\n\r\n              <Button\r\n                className=\"btn-container\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n              >\r\n                <Link to=\"/add-list\" className=\"btn\">\r\n                  Create More\r\n                </Link>\r\n              </Button>\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n      ))\r\n    ) : (\r\n      <div className=\"spinner\" />\r\n    );\r\n\r\n    return (\r\n      <article className=\"home-article\">\r\n        <h1 className=\"article-title\">Home</h1>\r\n        <section className=\"section-container large-wrapper\">\r\n          <h2>All Lists</h2>\r\n          <Divider />\r\n          <Grid container spacing={24} className=\"grid-container\">\r\n            {cards}\r\n          </Grid>\r\n        </section>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Home);\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n// Display messages\r\nimport MySnackBar from \"./../displayMessages/MySnackBar\";\r\n\r\n// UI Lib\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  margin: {\r\n    margin: \"10px auto\",\r\n    \"text-transform\": \"capitalize\"\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n    minWidth: 120\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing.unit * 2\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit\r\n  }\r\n});\r\n\r\nclass AddList extends Component {\r\n  state = {\r\n    listType: \"\",\r\n    listName: \"\",\r\n    website: \"\",\r\n    labelWidth: 0,\r\n    listID: null,\r\n    success: false,\r\n    successMsg: \"\",\r\n    warning: false,\r\n    warningMsg: \"\",\r\n    failure: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      labelWidth: ReactDOM.findDOMNode(this.InputLabelRef).offsetWidth\r\n    });\r\n  }\r\n\r\n  closeModal = () =>\r\n    this.setState({ warning: false, success: false, failure: false });\r\n\r\n  handleChange = e => {\r\n    this.setState(\r\n      {\r\n        [e.target.name]: e.target.value,\r\n        warning: false,\r\n        success: false,\r\n        failure: false\r\n      },\r\n      () => {\r\n        sessionStorage.listType = this.state.listType;\r\n        this.props.updateListType(this.state.listType);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    let { listType, listName } = this.state;\r\n    if (!listType || !listName)\r\n      return this.setState({\r\n        warning: true,\r\n        warningMsg: \"Name of website and list type are required.\"\r\n      });\r\n    fetch(\"//localhost:5000/lists\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"x-auth\": sessionStorage.token,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ type: listType, listName })\r\n    })\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n          return res.json();\r\n        } else {\r\n          this.setState({\r\n            warning: true,\r\n            failure: true,\r\n            warningMsg: \"List name must be unique.\"\r\n          });\r\n          throw Error(\"Duplicate key\");\r\n        }\r\n      })\r\n      .then(res => {\r\n        this.setState({\r\n          success: true,\r\n          successMsg: \"List created successfully!\",\r\n          listID: res._id,\r\n          listName: \"\",\r\n          listType: \"\"\r\n        });\r\n      })\r\n      .catch(e => console.error(e));\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <article className=\"add-list-article\">\r\n          <h1 className=\"article-title\">Generate new list</h1>\r\n          <section className=\"section-container add-list large-wrapper\">\r\n            <form className=\"add-list-form\" action=\"\">\r\n              {this.state.warning ? (\r\n                <MySnackBar\r\n                  variant={this.state.failure ? \"error\" : \"warning\"}\r\n                  className={classes.margin}\r\n                  message={this.state.warningMsg}\r\n                  onClick={this.closeModal}\r\n                />\r\n              ) : this.state.success ? (\r\n                <MySnackBar\r\n                  variant=\"success\"\r\n                  className={`${classes.margin} success-msg`}\r\n                  message={this.state.successMsg}\r\n                  target={this.state.listID}\r\n                  onClick={this.closeModal}\r\n                />\r\n              ) : null}\r\n              <Grid container spacing={24} className=\"form-grid\">\r\n                <Grid className=\"grid-left\" item xs={12} md={6} lg={5}>\r\n                  <h2 className=\"add-list-subtitle\">\r\n                    select the type of list:\r\n                  </h2>\r\n                  <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControl}\r\n                  >\r\n                    <InputLabel\r\n                      ref={ref => {\r\n                        this.InputLabelRef = ref;\r\n                      }}\r\n                      htmlFor=\"outlined-label\"\r\n                    >\r\n                      List Type\r\n                    </InputLabel>\r\n                    <Select\r\n                      value={this.state.listType}\r\n                      onChange={this.handleChange}\r\n                      input={\r\n                        <OutlinedInput\r\n                          labelWidth={this.state.labelWidth}\r\n                          name=\"listType\"\r\n                          id=\"outlined-label\"\r\n                        />\r\n                      }\r\n                    >\r\n                      <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                      </MenuItem>\r\n                      <MenuItem value=\"todo_list\">Todo List</MenuItem>\r\n                      <MenuItem value=\"launch_list\">Launch List</MenuItem>\r\n                      <MenuItem value=\"live_list\">Live List</MenuItem>\r\n                      <MenuItem value=\"ecom_list\">Ecommerce List</MenuItem>\r\n                      <MenuItem value=\"ecom_live_list\">\r\n                        Ecommerce Live List\r\n                      </MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  <React.Fragment>\r\n                    <h2 className=\"add-list-subtitle\">\r\n                      {this.state.listType === \"todo_list\"\r\n                        ? \"List Name: \"\r\n                        : \"Website Name: \"}\r\n                      {this.state.listName}\r\n                    </h2>\r\n                    <TextField\r\n                      label=\"List Name\"\r\n                      name=\"listName\"\r\n                      className={`${classes.textField} input-txt-container`}\r\n                      value={this.state.listName}\r\n                      onChange={this.handleChange}\r\n                      placeholder=\"List Name\"\r\n                      margin=\"normal\"\r\n                    />\r\n                  </React.Fragment>\r\n                </Grid>\r\n                <Grid className=\"grid-right\" item xs={12} md={6} lg={5}>\r\n                  <h2 className=\"add-list-subtitle\">submit new list</h2>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    onClick={this.handleSubmit}\r\n                  >\r\n                    Create List\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </section>\r\n        </article>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(AddList);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MySnackBar from \"./../../displayMessages/MySnackBar\";\r\n\r\n// UI Lib\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing.unit * 3,\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 700\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    \"max-width\": \"450px\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing.unit * 4,\r\n    top: \"40%\",\r\n    left: 0,\r\n    right: 0,\r\n    margin: \"auto\"\r\n  }\r\n});\r\n\r\nclass Lists extends Component {\r\n  state = {\r\n    listType: this.props.listType\r\n      ? this.props.listType\r\n      : sessionStorage.listType,\r\n    lists: [],\r\n    receivedLists: false,\r\n    searchResults: [],\r\n    defaultLists: [],\r\n    listToRemove: null,\r\n    removedList: {},\r\n    lastWarning: false,\r\n    open: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchLists();\r\n  }\r\n\r\n  fetchLists = () => {\r\n    let { listType } = this.state;\r\n    fetch(`//localhost:5000/lists/${listType}`, {\r\n      headers: {\r\n        \"x-auth\": sessionStorage.token\r\n      }\r\n    })\r\n      .then(res =>\r\n        res.status === 200\r\n          ? res.json()\r\n          : new Error(\"Could not authenticate and acquire lists.\")\r\n      )\r\n      .then(res => {\r\n        this.setState({\r\n          lists: res.lists,\r\n          receivedLists: true,\r\n          searchResults: res.lists,\r\n          defaultLists: res.lists\r\n        });\r\n      })\r\n      .catch(e => console.error(e));\r\n  };\r\n\r\n  handleClose = () => this.setState({ open: false });\r\n\r\n  prettifyName = () => {\r\n    let { listType } = this.state;\r\n    let name = listType.split(\"_\");\r\n    if (listType === \"ecom_live_list\") {\r\n      name = `${name[0]} ${name[1]} ${name[2]}`;\r\n      return `${name}s`;\r\n    }\r\n    name = `${name[0]} ${name[1]}`;\r\n    return `${name}s`;\r\n  };\r\n\r\n  handleSearch = e => {\r\n    let { value } = e.target;\r\n    let { lists } = this.state;\r\n    let regex = new RegExp(value, \"i\");\r\n    let temp = [];\r\n    lists.map(list => {\r\n      if (list.listName.match(regex) && value) {\r\n        temp.push(list);\r\n        return this.setState({ searchResults: temp, noMatch: false });\r\n      } else if (temp.length === 0 && value) {\r\n        return this.setState({\r\n          searchResults: this.state.defaultLists,\r\n          noMatch: true,\r\n          msg: `No results for ${value}`\r\n        });\r\n      } else if (!value) {\r\n        return this.setState({\r\n          noMatch: false,\r\n          searchResults: this.state.defaultLists\r\n        });\r\n      } else return false;\r\n    });\r\n  };\r\n\r\n  askToDelete = id => this.setState({ listToRemove: id, open: true });\r\n\r\n  deleteList = () => {\r\n    let { listToRemove } = this.state;\r\n    let id = listToRemove;\r\n    fetch(`//localhost:5000/lists/${id}`, {\r\n      method: \"delete\",\r\n      headers: {\r\n        \"x-auth\": sessionStorage.token\r\n      }\r\n    })\r\n      .then(res =>\r\n        res.status === 200 ? res.json() : new Error(\"Could not remove list.\")\r\n      )\r\n      .then(res => {\r\n        this.setState({\r\n          removedList: res,\r\n          open: false,\r\n          lastWarning: true\r\n        });\r\n        this.fetchLists();\r\n      });\r\n  };\r\n\r\n  dismissRestore = () => this.setState({ lastWarning: false });\r\n\r\n  restoreList = () => {\r\n    let { removedList, listType } = this.state;\r\n    fetch(\"//localhost:5000/lists\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-auth\": sessionStorage.token\r\n      },\r\n      body: JSON.stringify({\r\n        type: listType,\r\n        listName: removedList.listName,\r\n        items: removedList.items\r\n      })\r\n    })\r\n      .then(res =>\r\n        res.status === 200\r\n          ? res.json()\r\n          : new Error(\"Could not re-add removed list.\")\r\n      )\r\n      .then(res => {\r\n        let { lists } = this.state;\r\n        let temp = lists;\r\n        temp.push(res);\r\n\r\n        this.setState({\r\n          lists: temp,\r\n          searchResults: temp,\r\n          defaultLists: temp,\r\n          lastWarning: false\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { listType, receivedLists } = this.state;\r\n    const lists = receivedLists\r\n      ? this.state.searchResults.map(el => (\r\n          <TableRow key={el._id}>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {el.listName}\r\n            </TableCell>\r\n            <TableCell>{el.type}</TableCell>\r\n            <TableCell>{el.items.length}</TableCell>\r\n            <TableCell>{el.completed ? \"Complete\" : \"Incomplete\"}</TableCell>\r\n            <TableCell>\r\n              {el.createdAt\r\n                ? `${new Date(el.createdAt).getMonth() + 1}/${new Date(\r\n                    el.createdAt\r\n                  ).getDate()}/${new Date(el.createdAt).getFullYear()}`\r\n                : \"No date found.\"}{\" \"}\r\n            </TableCell>\r\n            <TableCell>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\"link-container\"\r\n              >\r\n                <Link to={`/list?id=${el._id}`} className=\"btn\">\r\n                  View\r\n                </Link>\r\n              </Button>\r\n            </TableCell>\r\n            <TableCell>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={() => this.askToDelete(el._id)}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </TableCell>\r\n          </TableRow>\r\n        ))\r\n      : null;\r\n    const searchBar = (\r\n      <div className=\"search-bar-container\">\r\n        <input\r\n          id=\"search\"\r\n          placeholder=\"Search...\"\r\n          type=\"search\"\r\n          onChange={this.handleSearch}\r\n          autoComplete=\"off\"\r\n        />\r\n        <Link to=\"/\" className=\"return-btn\">\r\n          <i className=\"fas fa-caret-left\" />\r\n          Return to all lists\r\n        </Link>\r\n        {this.state.noMatch ? (\r\n          <div className=\"warning\">\r\n            <MySnackBar\r\n              variant=\"warning\"\r\n              className={classes.margin}\r\n              message={this.state.msg}\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n    const modal = (\r\n      <Modal\r\n        aria-labelledby=\"delete-modal-title\"\r\n        aria-describedby=\"delete-modal-description\"\r\n        open={this.state.open}\r\n        onClose={this.handleClose}\r\n      >\r\n        <div className={classes.paper}>\r\n          <Typography variant=\"h6\" id=\"modal-title\">\r\n            Are you sure you want to remove this list?\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\r\n            This action can be undone, but it is illadvised to constantly remove\r\n            and re-add lists.\r\n          </Typography>\r\n          <div className=\"btn-container\">\r\n            <Button\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              onClick={this.deleteList}\r\n            >\r\n              Remove The List\r\n            </Button>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={this.handleClose}\r\n            >\r\n              Keep The List\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n\r\n    const askToRestore = (\r\n      <React.Fragment>\r\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.restoreList}>\r\n          restore list?\r\n        </Button>\r\n        <Button\r\n          onClick={this.dismissRestore}\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n        >\r\n          No, I meant to delete it.\r\n        </Button>\r\n      </React.Fragment>\r\n    );\r\n\r\n    return (\r\n      <div className=\"all-lists-type\">\r\n        <h1 className=\"article-title\">All {this.prettifyName(listType)}</h1>\r\n        {searchBar}\r\n        <article className={`list-table ${listType}`}>\r\n          <section className=\"section-container\">\r\n            {modal}\r\n            {this.state.lastWarning ? askToRestore : null}\r\n            <Paper className={classes.root}>\r\n              <Table className={classes.table}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>{listType}s (All Lists)</TableCell>\r\n                    <TableCell>Type</TableCell>\r\n                    <TableCell>Items</TableCell>\r\n                    <TableCell>Status</TableCell>\r\n                    <TableCell>Date Created</TableCell>\r\n                    <TableCell>View</TableCell>\r\n                    <TableCell>Delete</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>{lists}</TableBody>\r\n              </Table>\r\n            </Paper>\r\n          </section>\r\n        </article>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Lists);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MySnackBar from \"./../../displayMessages/MySnackBar\";\r\n\r\n// UI Lib\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst styles = theme => ({\r\n  fab: {\r\n    margin: theme.spacing.unit\r\n  },\r\n  button: {\r\n    margin: theme.spacing.unit\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n    width: 400\r\n  }\r\n});\r\n\r\nclass List extends Component {\r\n  state = {\r\n    id: \"\",\r\n    list: {},\r\n    items_complete: 0,\r\n    gotList: false,\r\n    listType: this.props.listType\r\n      ? this.props.listType\r\n      : sessionStorage.listType,\r\n    progress: \"0%\",\r\n    newText: \"\",\r\n    showEditor: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    let params = new URLSearchParams(window.location.search);\r\n    let id = params.get(\"id\");\r\n    this.setState({ id }, () => this.fetchList());\r\n  }\r\n\r\n  fetchList = () => {\r\n    fetch(`//localhost:5000/list/${this.state.id}`, {\r\n      headers: {\r\n        \"x-auth\": sessionStorage.token\r\n      }\r\n    })\r\n      .then(res =>\r\n        res.status === 200\r\n          ? res.json()\r\n          : new Error(\"Could not authenticate user.\")\r\n      )\r\n      .then(res => {\r\n        this.setState({ list: res.list[0], gotList: true }, () => {\r\n          this.countCompleted();\r\n        });\r\n      });\r\n  };\r\n\r\n  updateItems = e => {\r\n    let { list } = this.state;\r\n    let temp = list;\r\n    let items = list.items;\r\n    let id = e.target.id;\r\n    let checked = e.target.checked;\r\n    if (!id) return;\r\n    let selectedItem = items.find(item => item._id === id);\r\n    let updatedItem = (selectedItem.completed = checked);\r\n    temp.items.map(el => (el._id === selectedItem ? (el = updatedItem) : null));\r\n    this.setState({ list: temp, items_complete: 0 }, () => this.sendNewList());\r\n  };\r\n\r\n  countCompleted = () => {\r\n    let { list } = this.state;\r\n    let items = list.items;\r\n    let total = 0;\r\n    items.map(el => {\r\n      if (el.completed) return total++;\r\n      else return false;\r\n    });\r\n    this.setState({ items_complete: total }, () => this.progressPercentage());\r\n  };\r\n\r\n  progressPercentage = () => {\r\n    let { items_complete, list } = this.state;\r\n    if (list.items.length === 0) return this.setState({ progress: \"0%\" });\r\n    let percent = (items_complete / list.items.length) * 100;\r\n    percent = Math.round(percent);\r\n\r\n    return this.setState({ progress: `${percent}%` });\r\n  };\r\n\r\n  // Updating newly added items\r\n  toggleEditor = () => this.setState({ showEditor: !this.state.showEditor });\r\n\r\n  removeItem = id => {\r\n    let { list } = this.state;\r\n    let items = list.items;\r\n    let newItems = items.filter(item => item._id !== id);\r\n    let temp = list;\r\n    temp.items = newItems;\r\n    this.setState({ list: temp }, () => this.sendNewList());\r\n  };\r\n\r\n  handleChange = e => {\r\n    if (e.which === 13) return this.setNewItem();\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  setNewItem = () => {\r\n    let { list } = this.state;\r\n    let item = this.state.newText;\r\n    let itemObj = { text: item, completed: false };\r\n    let temp = list;\r\n    temp.items.push(itemObj);\r\n    this.setState({ list: temp, newText: \"\" }, () => this.sendNewList());\r\n  };\r\n\r\n  sendNewList = () => {\r\n    let { list } = this.state;\r\n    let newItems = list.items;\r\n    fetch(`//localhost:5000/list/${this.state.id}`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-auth\": sessionStorage.token\r\n      },\r\n      body: JSON.stringify({ items: newItems })\r\n    })\r\n      .then(res =>\r\n        res.status === 200\r\n          ? res.json()\r\n          : new Error(\"Could not add new list item.\")\r\n      )\r\n      .then(res => {\r\n        this.setState({ list: res }, () => this.countCompleted());\r\n      })\r\n      .catch(e => console.error(e));\r\n  };\r\n\r\n  // Displaying \"pretty\" list type name\r\n  prettifyName = () => {\r\n    let { listType } = this.state;\r\n    let name = listType.split(\"_\");\r\n    name = `${name[0]} ${name[1]}`;\r\n    return `${name}s`;\r\n  };\r\n\r\n  // List name modification based on type\r\n  handleListName = () => {\r\n    let { list, listType } = this.state;\r\n    let lName = list.listName;\r\n    if (listType === \"todo_list\") return lName;\r\n    let typeName = this.prettifyName();\r\n    return `${lName} - ${typeName}`;\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { list, gotList } = this.state;\r\n    const listContent = gotList ? (\r\n      <div className=\"list\">\r\n        {list.completed ? (\r\n          <MySnackBar\r\n            variant=\"success\"\r\n            className=\"success-alert\"\r\n            message={`Completed at: ${new Date(\r\n              list.completedAt\r\n            ).toLocaleTimeString()} - ${new Date(list.completedAt).getMonth() +\r\n              1}/${new Date(list.completedAt).getDate()}/${new Date(\r\n              list.completedAt\r\n            ).getFullYear()}`}\r\n          />\r\n        ) : null}\r\n        <div id=\"progress-bar\">\r\n          <h1 className=\"single-list-title\">{this.handleListName()}</h1>\r\n          <h3>{this.state.progress}</h3>\r\n        </div>\r\n        <div className=\"list-items\">\r\n          {list.items.map((clItem, clIdx) => (\r\n            <React.Fragment key={clIdx}>\r\n              <label\r\n                htmlFor={clItem._id}\r\n                className={`label ${\r\n                  clItem.completed ? \"cl-selected\" : \"cl-deselected\"\r\n                }`}\r\n                onClick={this.updateItems}\r\n              >\r\n                {clItem.text}\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id={clItem._id}\r\n                  className=\"checkbox\"\r\n                  defaultChecked={clItem.completed}\r\n                />\r\n                <span className=\"checkmark\" />\r\n                <IconButton\r\n                  aria-label=\"Delete\"\r\n                  className=\"delete-item\"\r\n                  onClick={() => this.removeItem(clItem._id)}\r\n                >\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </label>\r\n            </React.Fragment>\r\n          ))}\r\n        </div>\r\n        <Fab\r\n          color=\"primary\"\r\n          aria-label=\"Add\"\r\n          className={`${classes.fab} add-btn`}\r\n          size=\"small\"\r\n          onClick={this.toggleEditor}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n      </div>\r\n    ) : (\r\n      <div className=\"spinner\" />\r\n    );\r\n\r\n    const addToList = gotList ? (\r\n      <React.Fragment>\r\n        <h1 className=\"add-item-title\">New Task: {this.state.newText}</h1>\r\n        <div className=\"new-item-input-container\">\r\n          <TextField\r\n            id=\"new-item-text\"\r\n            label=\"New List Item\"\r\n            value={this.state.newText}\r\n            onChange={this.handleChange}\r\n            onKeyPress={this.handleChange}\r\n            className={`${classes.textField} input-txt`}\r\n            margin=\"normal\"\r\n            name=\"newText\"\r\n            autoComplete=\"off\"\r\n          />\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            className={`${classes.button} input-btn`}\r\n            onClick={this.setNewItem}\r\n          >\r\n            Add Item\r\n          </Button>\r\n        </div>\r\n      </React.Fragment>\r\n    ) : null;\r\n\r\n    return (\r\n      <article className=\"single-list-view\">\r\n        <section className=\"section-container wrap\">\r\n          <Link to={`/lists/${this.state.listType}s`} className=\"return-btn\">\r\n            <i className=\"fas fa-caret-left\" />\r\n            Return to {this.prettifyName()}\r\n          </Link>\r\n          {listContent}\r\n          {this.state.showEditor ? addToList : null}\r\n        </section>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(List);\r\n","import React, { Component } from \"react\";\r\nimport MySnackBar from \"./../displayMessages/MySnackBar\";\r\nimport validator from \"validator\";\r\n\r\n// UI Lib\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport AddAPhoto from \"@material-ui/icons/AddAPhoto\";\r\nimport AddPhotoAlternate from \"@material-ui/icons/AddPhotoAlternate\";\r\nimport Email from \"@material-ui/icons/Email\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    padding: theme.spacing.unit * 2,\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary\r\n  },\r\n  card: {\r\n    maxWidth: \"100%\"\r\n  },\r\n  media: {\r\n    height: 140,\r\n    backgroundSize: \"contain\"\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit\r\n  },\r\n  dense: {\r\n    marginTop: 16\r\n  },\r\n  menu: {\r\n    width: 200\r\n  },\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n    fontWeight: \"bold\"\r\n  },\r\n  margin: {\r\n    margin: \"auto\",\r\n    marginTop: \"1rem\"\r\n  }\r\n});\r\n\r\nclass Profile extends Component {\r\n  state = {\r\n    role: \"\",\r\n    un: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    userImg: \"\",\r\n    title_bg: \"\",\r\n    warning: false,\r\n    warningMsg: \"\",\r\n    success: false,\r\n    successMsg: \"\",\r\n    failure: false,\r\n    failureMsg: \"\",\r\n    visible: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.role) this.setState({ role: this.props.role });\r\n    else this.fetchUserProfile();\r\n  }\r\n\r\n  fetchUserProfile = () => {\r\n    fetch(\"//localhost:5000/users/me\", {\r\n      headers: { \"x-auth\": sessionStorage.token }\r\n    })\r\n      .then(res =>\r\n        res.status === 200 ? res.json() : new Error(\"Invalid Token\")\r\n      )\r\n      .then(res => {\r\n        this.setState({\r\n          role: res.user.role,\r\n          un: res.user.username ? res.user.username : \"\",\r\n          email: res.user.email,\r\n          userImg: res.user.profile_img,\r\n          title_bg: res.user.profile_pg_bg\r\n        });\r\n      })\r\n      .catch(e => console.log(e));\r\n  };\r\n\r\n  closeModal = () =>\r\n    this.setState({ warning: false, success: false, failure: false });\r\n  handleChange = e =>\r\n    this.setState({ [e.target.name]: e.target.value, warning: false });\r\n  toggleVis = () => this.setState({ visible: !this.state.visible });\r\n\r\n  submitProfile = () => {\r\n    let { email, password, un, userImg, title_bg } = this.state;\r\n    if (!email) {\r\n      return this.setState({\r\n        warning: true,\r\n        warningMsg: \"Email field cannot be blank!\"\r\n      });\r\n    }\r\n    if (!validator.isEmail(email)) {\r\n      return this.setState({ warning: true, warningMsg: \"Invalid email.\" });\r\n    }\r\n    fetch(\"//localhost:5000/users/me\", {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-auth\": sessionStorage.token\r\n      },\r\n      body: JSON.stringify({\r\n        email,\r\n        username: un,\r\n        profile_img: userImg,\r\n        profile_pg_bg: title_bg,\r\n        password\r\n      })\r\n    })\r\n      .then(res => {\r\n        if (res.status === 200) return res.json();\r\n        return this.setState({\r\n          failure: true,\r\n          warning: true,\r\n          failureMsg: \"Unable to fulfill request.\"\r\n        });\r\n      })\r\n      .then(res => {\r\n        this.setState({\r\n          un: res.username ? res.username : \"\",\r\n          email: res.email,\r\n          userImg: res.profile_img,\r\n          title_bg: res.profile_pg_bg,\r\n          failure: false,\r\n          warning: false,\r\n          success: true,\r\n          password: \"\",\r\n          successMsg: \"Successfully Updated User Profile!\"\r\n        });\r\n      })\r\n      .catch(e => console.error(e));\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    let { role, un, email, userImg, title_bg } = this.state;\r\n    const userCard = (\r\n      <Card className={classes.card}>\r\n        <CardActionArea>\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={userImg}\r\n            title=\"User Image\"\r\n          />\r\n          <CardContent>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"h5\"\r\n              component=\"h2\"\r\n              className=\"text-center\"\r\n            >\r\n              {un ? un : \"Create a username!\"}\r\n            </Typography>\r\n            <Divider />\r\n            <Typography variant=\"h6\" component=\"h3\">\r\n              Role: {role}\r\n            </Typography>\r\n            <Typography variant=\"h6\" component=\"h3\">\r\n              Email: {email}\r\n            </Typography>\r\n            <Divider />\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Card>\r\n    );\r\n\r\n    const editor = (\r\n      <form className=\"profile-editor\" action=\"\">\r\n        <h2>Update Profile Information</h2>\r\n        <Divider />\r\n        <FormControl className=\"text-fields\">\r\n          {this.state.warning ? (\r\n            <MySnackBar\r\n              variant={this.state.failure ? \"error\" : \"warning\"}\r\n              className={classes.margin}\r\n              message={\r\n                this.state.failure\r\n                  ? this.state.failureMsg\r\n                  : this.state.warningMsg\r\n              }\r\n              onClick={this.closeModal}\r\n            />\r\n          ) : this.state.success ? (\r\n            <MySnackBar\r\n              variant=\"success\"\r\n              className={classes.margin}\r\n              message={this.state.successMsg}\r\n              onClick={this.closeModal}\r\n            />\r\n          ) : null}\r\n          <TextField\r\n            label=\"Profile Picture\"\r\n            name=\"userImg\"\r\n            className={classes.textField}\r\n            value={this.state.userImg}\r\n            onChange={this.handleChange}\r\n            margin=\"normal\"\r\n            autoComplete=\"off\"\r\n            variant=\"outlined\"\r\n            helperText=\"This only accepts urls to images\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <AddAPhoto />\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n          />\r\n          <TextField\r\n            label=\"Username\"\r\n            name=\"un\"\r\n            className={classes.textField}\r\n            value={this.state.un}\r\n            onChange={this.handleChange}\r\n            margin=\"normal\"\r\n            autoComplete=\"off\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <AccountCircle />\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n          />\r\n          <TextField\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            className={classes.textField}\r\n            value={this.state.email}\r\n            onChange={this.handleChange}\r\n            margin=\"normal\"\r\n            autoComplete=\"off\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <Email />\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n          />\r\n          <TextField\r\n            label=\"New Password\"\r\n            name=\"password\"\r\n            type={this.state.visible ? \"text\" : \"password\"}\r\n            className={classes.textField}\r\n            value={this.state.password}\r\n            onChange={this.handleChange}\r\n            margin=\"normal\"\r\n            autoComplete=\"off\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  {this.state.visible ? (\r\n                    <VisibilityOff\r\n                      className=\"vis-icon\"\r\n                      onClick={this.toggleVis}\r\n                    />\r\n                  ) : (\r\n                    <Visibility className=\"vis-icon\" onClick={this.toggleVis} />\r\n                  )}\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n          />\r\n          <TextField\r\n            label=\"Page Title Background\"\r\n            name=\"title_bg\"\r\n            className={classes.textField}\r\n            value={this.state.title_bg}\r\n            onChange={this.handleChange}\r\n            margin=\"normal\"\r\n            autoComplete=\"off\"\r\n            variant=\"outlined\"\r\n            helperText=\"This only accepts urls to images\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <AddPhotoAlternate />\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n          />\r\n        </FormControl>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={this.submitProfile}\r\n        >\r\n          Save Changes\r\n        </Button>\r\n      </form>\r\n    );\r\n    return (\r\n      <article className=\"profile-article\">\r\n        <h1\r\n          className=\"article-title\"\r\n          style={title_bg ? { backgroundImage: `url(${title_bg})` } : null}\r\n        >\r\n          Profile\r\n        </h1>\r\n        <section\r\n          className={`${\r\n            classes.root\r\n          } section-container profile-section large-wrapper`}\r\n        >\r\n          {role ? (\r\n            <Grid container spacing={24} className=\"grid-container\">\r\n              <Grid item xs={12} sm={6} md={4} className=\"grid-item\">\r\n                {userCard}\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={8} className=\"grid-item\">\r\n                {editor}\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <div className=\"spinner\" />\r\n          )}\r\n        </section>\r\n      </article>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(Profile);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport MySnackBar from \"./../../displayMessages/MySnackBar\";\r\n\r\n// UI Lib\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing.unit * 3,\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 700\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    \"max-width\": \"450px\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing.unit * 4,\r\n    top: \"40%\",\r\n    left: 0,\r\n    right: 0,\r\n    margin: \"auto\"\r\n  },\r\n  margin: {\r\n    margin: \"auto\"\r\n  }\r\n});\r\n\r\nclass Users extends Component {\r\n  state = {\r\n    users: [],\r\n    receivedUsers: false,\r\n    searchResults: [],\r\n    defaultLists: [],\r\n    userToRemove: null,\r\n    open: false,\r\n    failure: false,\r\n    msg: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props\r\n      .checkAuth()\r\n      .then(role =>\r\n        role === \"admin\" ? this.fetchUsers() : <Redirect to=\"/\" />\r\n      );\r\n  }\r\n\r\n  fetchUsers = () => {\r\n    fetch(`//localhost:5000/users`, {\r\n      headers: {\r\n        \"x-auth\": sessionStorage.token\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (res.status === 200) return res.json();\r\n        else throw new Error(\"Could not retrive users\");\r\n      })\r\n      .then(res => {\r\n        this.setState({\r\n          users: res,\r\n          receivedUsers: true,\r\n          searchResults: res,\r\n          defaultLists: res\r\n        });\r\n      })\r\n      .catch(e => console.error(e));\r\n  };\r\n\r\n  handleClose = () => this.setState({ open: false });\r\n  closeModal = () => this.setState({ failure: false });\r\n\r\n  prettifyName = () => {\r\n    let { listType } = this.state;\r\n    let name = listType.split(\"_\");\r\n    if (listType === \"ecom_live_list\") {\r\n      name = `${name[0]} ${name[1]} ${name[2]}`;\r\n      return `${name}s`;\r\n    }\r\n    name = `${name[0]} ${name[1]}`;\r\n    return `${name}s`;\r\n  };\r\n\r\n  handleSearch = e => {\r\n    let { value } = e.target;\r\n    let { users } = this.state;\r\n    let regex = new RegExp(value, \"i\");\r\n    let temp = [];\r\n    users.map(user => {\r\n      if (user.email.match(regex) && value) {\r\n        temp.push(user);\r\n        return this.setState({ searchResults: temp, noMatch: false });\r\n      } else if (temp.length === 0 && value) {\r\n        return this.setState({\r\n          searchResults: this.state.defaultLists,\r\n          noMatch: true,\r\n          msg: `No results for ${value}`\r\n        });\r\n      } else if (!value) {\r\n        return this.setState({\r\n          noMatch: false,\r\n          searchResults: this.state.defaultLists\r\n        });\r\n      } else return false;\r\n    });\r\n  };\r\n\r\n  askToDelete = email => this.setState({ userToRemove: email, open: true });\r\n\r\n  deleteUser = () => {\r\n    let { userToRemove } = this.state;\r\n    let email = userToRemove;\r\n    fetch(`//localhost:5000/users/remove/${email}`, {\r\n      method: \"delete\",\r\n      headers: {\r\n        \"x-auth\": sessionStorage.token\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (res.status === 200) return res.json();\r\n        if (res.status === 409) {\r\n          return res\r\n            .json()\r\n            .then(error => this.setState({ failure: true, msg: error.err }));\r\n        }\r\n      })\r\n      .then(res => {\r\n        this.setState({ open: false });\r\n        this.fetchUsers();\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { searchResults, receivedUsers } = this.state;\r\n    const users = receivedUsers\r\n      ? searchResults.map(el => (\r\n          <TableRow key={el._id}>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {el.listName}\r\n            </TableCell>\r\n            <TableCell>{el._id}</TableCell>\r\n            <TableCell>{el.email}</TableCell>\r\n            <TableCell>{el.role}</TableCell>\r\n            <TableCell>\r\n              {el.username ? el.username : \"No username created.\"}\r\n            </TableCell>\r\n            <TableCell>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={() => this.askToDelete(el.email)}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </TableCell>\r\n          </TableRow>\r\n        ))\r\n      : null;\r\n    const searchBar = (\r\n      <div className=\"search-bar-container\">\r\n        <input\r\n          id=\"search\"\r\n          placeholder=\"Search by email...\"\r\n          type=\"search\"\r\n          onChange={this.handleSearch}\r\n          autoComplete=\"off\"\r\n        />\r\n        <Link to=\"/\" className=\"return-btn\">\r\n          <i className=\"fas fa-caret-left\" />\r\n          Return to home\r\n        </Link>\r\n        {this.state.noMatch ? (\r\n          <div className=\"warning\">\r\n            <MySnackBar\r\n              variant=\"warning\"\r\n              className={classes.margin}\r\n              message={this.state.msg}\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n    const modal = (\r\n      <Modal\r\n        aria-labelledby=\"delete-modal-title\"\r\n        aria-describedby=\"delete-modal-description\"\r\n        open={this.state.open}\r\n        onClose={this.handleClose}\r\n      >\r\n        <div className={classes.paper}>\r\n          <Typography variant=\"h6\" id=\"modal-title\">\r\n            Are you sure you want to remove this user?\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\r\n            This action{\" \"}\r\n            <strong>\r\n              <em>cannot</em>\r\n            </strong>{\" \"}\r\n            be undone, you must be absolutely positive you want to remove this\r\n            user.\r\n          </Typography>\r\n          <div className=\"btn-container\">\r\n            <Button\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              onClick={this.deleteUser}\r\n            >\r\n              Remove The User\r\n            </Button>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={this.handleClose}\r\n            >\r\n              Keep The User\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n\r\n    return (\r\n      <div className=\"all-users-type\">\r\n        <h1 className=\"article-title\">All Users - Admin Overview</h1>\r\n        {searchBar}\r\n        <article className=\"users-table\">\r\n          <section className=\"section-container\">\r\n            {modal}\r\n            {this.state.failure ? (\r\n              <MySnackBar\r\n                variant=\"error\"\r\n                className={classes.margin}\r\n                message={this.state.msg}\r\n                onClick={this.closeModal}\r\n              />\r\n            ) : null}\r\n            <Paper className={classes.root}>\r\n              <Table className={classes.table}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>All Users</TableCell>\r\n                    <TableCell>ID</TableCell>\r\n                    <TableCell>Email</TableCell>\r\n                    <TableCell>Role</TableCell>\r\n                    <TableCell>Username</TableCell>\r\n                    <TableCell>Delete</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>{users}</TableBody>\r\n              </Table>\r\n            </Paper>\r\n          </section>\r\n        </article>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Users);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ReactDOM from \"react-dom\";\r\nimport MySnackBar from \"./../displayMessages/MySnackBar\";\r\nimport validator from \"validator\";\r\n\r\n// UI Lib\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Email from \"@material-ui/icons/Email\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n    minWidth: 120\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing.unit * 2\r\n  },\r\n  card: {\r\n    maxWidth: \"100%\"\r\n  },\r\n  media: {\r\n    height: 140,\r\n    backgroundSize: \"contain\"\r\n  },\r\n\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit\r\n  },\r\n  dense: {\r\n    marginTop: 16\r\n  },\r\n  menu: {\r\n    width: 200\r\n  },\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n    fontWeight: \"bold\"\r\n  },\r\n  margin: {\r\n    margin: \"auto\",\r\n    marginTop: \"1rem\"\r\n  }\r\n});\r\n\r\nclass AddUser extends Component {\r\n  state = {\r\n    labelWidth: 0,\r\n    email: \"\",\r\n    password: \"\",\r\n    role: \"\",\r\n    userImg: \"https://s3.amazonaws.com/minervalists/default_user_icon.png\",\r\n    warning: false,\r\n    warningMsg: \"\",\r\n    success: false,\r\n    successMsg: \"\",\r\n    failure: false,\r\n    failureMsg: \"\",\r\n    visible: false,\r\n    loading: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props\r\n      .checkAuth()\r\n      .then(role => (role === \"admin\" ? \"\" : <Redirect to=\"/\" />));\r\n\r\n    this.setState({\r\n      labelWidth: ReactDOM.findDOMNode(this.InputLabelRef).offsetWidth\r\n    });\r\n  }\r\n\r\n  closeModal = () =>\r\n    this.setState({ warning: false, success: false, failure: false });\r\n  handleChange = e =>\r\n    this.setState({ [e.target.name]: e.target.value, warning: false });\r\n  toggleVis = () => this.setState({ visible: !this.state.visible });\r\n\r\n  addUser = () => {\r\n    let { email, password, role } = this.state;\r\n    this.setState({ loading: true });\r\n    if ((!email, !password, !role))\r\n      return this.setState({\r\n        warning: true,\r\n        warningMsg: \"All of the fields must be filled out.\",\r\n        loading: false\r\n      });\r\n    if (!validator.isEmail(email))\r\n      return this.setState({\r\n        warning: true,\r\n        warningMsg: \"Invalid email!\",\r\n        loading: false\r\n      });\r\n    fetch(\"//localhost:5000/users/add\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"x-auth\": sessionStorage.token,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ email, password, role })\r\n    })\r\n      .then(res =>\r\n        res.status === 200\r\n          ? this.setState({\r\n              loading: false,\r\n              success: true,\r\n              successMsg: \"Successfully generated user!\"\r\n            })\r\n          : this.setState({\r\n              failure: true,\r\n              failureMsg: \"Unable to create new user\"\r\n            })\r\n      )\r\n      .catch(e => console.error(e));\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { email, password, role, userImg } = this.state;\r\n    const userCard = (\r\n      <Card className={classes.card}>\r\n        <CardActionArea>\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={userImg}\r\n            title=\"User Image\"\r\n          />\r\n          <CardContent>\r\n            <Divider />\r\n            <Typography variant=\"h6\" component=\"h3\">\r\n              Role: {role}\r\n            </Typography>\r\n            <Typography variant=\"h6\" component=\"h3\">\r\n              Email: {email}\r\n            </Typography>\r\n            <Divider />\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Card>\r\n    );\r\n\r\n    const editor = (\r\n      <form className=\"profile-editor\" action=\"\">\r\n        <h2>New User's Information</h2>\r\n        <Divider />\r\n        <FormControl className=\"text-fields\">\r\n          {this.state.warning ? (\r\n            <MySnackBar\r\n              variant={this.state.failure ? \"error\" : \"warning\"}\r\n              className={classes.margin}\r\n              message={\r\n                this.state.failure\r\n                  ? this.state.failureMsg\r\n                  : this.state.warningMsg\r\n              }\r\n              onClick={this.closeModal}\r\n            />\r\n          ) : this.state.success ? (\r\n            <MySnackBar\r\n              variant=\"success\"\r\n              className={classes.margin}\r\n              message={this.state.successMsg}\r\n              onClick={this.closeModal}\r\n            />\r\n          ) : null}\r\n          <TextField\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            className={classes.textField}\r\n            value={email}\r\n            onChange={this.handleChange}\r\n            margin=\"normal\"\r\n            autoComplete=\"off\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <Email />\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n          />\r\n          <TextField\r\n            label=\"New Password\"\r\n            name=\"password\"\r\n            type={this.state.visible ? \"text\" : \"password\"}\r\n            className={classes.textField}\r\n            value={password}\r\n            onChange={this.handleChange}\r\n            margin=\"normal\"\r\n            autoComplete=\"off\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  {this.state.visible ? (\r\n                    <VisibilityOff\r\n                      className=\"vis-icon\"\r\n                      onClick={this.toggleVis}\r\n                    />\r\n                  ) : (\r\n                    <Visibility className=\"vis-icon\" onClick={this.toggleVis} />\r\n                  )}\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n          />\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel\r\n              ref={ref => {\r\n                this.InputLabelRef = ref;\r\n              }}\r\n              htmlFor=\"outlined-label\"\r\n            >\r\n              Role\r\n            </InputLabel>\r\n            <Select\r\n              value={this.state.role}\r\n              onChange={this.handleChange}\r\n              input={\r\n                <OutlinedInput\r\n                  labelWidth={this.state.labelWidth}\r\n                  name=\"role\"\r\n                  id=\"outlined-label\"\r\n                />\r\n              }\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              <MenuItem value=\"user\">User</MenuItem>\r\n              <MenuItem value=\"admin\">Admin</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </FormControl>\r\n        {this.state.loading ? (\r\n          <div className=\"spinner\" />\r\n        ) : (\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            onClick={this.addUser}\r\n          >\r\n            Create User\r\n          </Button>\r\n        )}\r\n      </form>\r\n    );\r\n\r\n    return (\r\n      <article className=\"add-user-article\">\r\n        <h1 className=\"article-title\">Create New User</h1>\r\n        <section className=\"section-container add-user-section large-wrapper\">\r\n          <Grid container spacing={24} className=\"grid-container\">\r\n            <Grid item xs={12} sm={6} md={4} className=\"grid-item\">\r\n              {userCard}\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={8} className=\"grid-item\">\r\n              {editor}\r\n            </Grid>\r\n          </Grid>\r\n        </section>\r\n      </article>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(AddUser);\r\n","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\n\n// Sections\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Login from \"./components/Login\";\n\n// Pages\nimport Home from \"./pages/Home\";\nimport AddList from \"./pages/AddList\";\nimport Lists from \"./pages/views/Lists\";\nimport List from \"./pages/views/List\";\n\n// User pages\nimport Profile from \"./pages/Profile\";\nimport Users from \"./pages/views/Users\";\nimport AddUser from \"./pages/AddUser\";\n\nclass App extends Component {\n  state = {\n    loggedIn: true,\n    role: sessionStorage.role ? sessionStorage.role : \"\",\n    authToken: \"\",\n    resMsg: \"\",\n    listType: \"\"\n  };\n\n  componentDidMount() {\n    this.checkForToken();\n    this.checkAuth();\n  }\n\n  checkForToken = () => {\n    if (sessionStorage.token) {\n      this.setState({ loggedIn: true, authToken: sessionStorage.token });\n      return sessionStorage.token;\n    } else {\n      this.setState({ loggedIn: false });\n      return false;\n    }\n  };\n\n  checkAuth = () => {\n    return new Promise((resolve, reject) => {\n      fetch(\"//localhost:5000/users/me\", {\n        headers: {\n          \"x-auth\": sessionStorage.token\n        }\n      })\n        .then(res =>\n          res.status === 200\n            ? res.json()\n            : new Error(\"Could not validate token\")\n        )\n        .then(res => {\n          this.setState({ role: res.user.role });\n          sessionStorage.role = res.user.role;\n          resolve(res.user.role);\n        })\n        .catch(e => console.log(e));\n    });\n  };\n\n  signIn = (email, password) => {\n    fetch(\"//localhost:5000/users/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({ email, password })\n    })\n      .then(res => {\n        if (res.status === 200) {\n          return res.json();\n        } else {\n          throw Error(\"Authenticated failed.\");\n        }\n      })\n      .then(response => {\n        this.setState(\n          { loggedIn: true, authToken: response.code, role: response.role },\n          () => {\n            sessionStorage.token = response.code;\n            sessionStorage.role = response.role;\n            window.location.href = \"/\";\n          }\n        );\n      })\n      .catch(e => this.setState({ resMsg: \"Authentication failed!\" }));\n  };\n\n  signOut = e => {\n    e.preventDefault();\n    fetch(\"//localhost:5000/users/signout\", {\n      method: \"DELETE\",\n      headers: {\n        \"x-auth\": sessionStorage.token\n      }\n    })\n      .then(res => res.json())\n      .then(response => {\n        this.setState({ loggedIn: false, resMsg: response.success }, () =>\n          sessionStorage.removeItem(\"token\")\n        );\n      })\n      .catch(e => {\n        this.setState(\n          { loggedIn: false, resMsg: \"Signed out successfully\" },\n          () => sessionStorage.removeItem(\"token\")\n        );\n      });\n  };\n\n  updateListType = type => {\n    this.setState({ listType: type });\n    sessionStorage.listType = type;\n  };\n\n  render() {\n    return (\n      <main className=\"App main\">\n        {this.state.loggedIn ? null : <Redirect to=\"/login\" />}\n\n        {this.state.loggedIn ? (\n          <Header loggedIn={this.state.loggedIn} signOut={this.signOut} />\n        ) : null}\n\n        <Route\n          path=\"/\"\n          exact\n          render={() => (\n            <Home\n              loggedIn={this.state.loggedIn}\n              signOut={this.signOut}\n              updateListType={this.updateListType}\n            />\n          )}\n        />\n\n        <Route\n          path=\"/login\"\n          exact\n          render={() => (\n            <Login signIn={this.signIn} resMsg={this.state.resMsg} />\n          )}\n        />\n\n        <Route\n          path=\"/add-list\"\n          render={() => <AddList updateListType={this.updateListType} />}\n        />\n\n        <Route\n          path=\"/lists/:listType\"\n          render={() => <Lists listType={this.state.listType} />}\n        />\n\n        <Route\n          path=\"/list\"\n          render={() => <List listType={this.state.listType} />}\n        />\n\n        {/* User routes */}\n\n        <Route\n          path=\"/profile\"\n          render={() => <Profile role={this.state.role} />}\n        />\n\n        <Route\n          exact\n          path=\"/users\"\n          render={() =>\n            this.state.role === \"admin\" ? (\n              <Users checkAuth={this.checkAuth} />\n            ) : (\n              <Redirect to=\"/\" />\n            )\n          }\n        />\n\n        <Route\n          path=\"/users/add\"\n          render={() =>\n            this.state.role === \"admin\" ? (\n              <AddUser checkAuth={this.checkAuth} />\n            ) : (\n              <Redirect to=\"/\" />\n            )\n          }\n        />\n\n        {this.state.loggedIn ? <Footer /> : null}\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.ec3271b8.png\";"],"sourceRoot":""}